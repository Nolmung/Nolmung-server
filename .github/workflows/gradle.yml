# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "develop" ]
    
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set YML
        run: |
          echo ${{ secrets.APPLICATION_YML }} | base64 --decode > ./src/main/resources/application.yml

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2.4.2
        with:
          arguments: clean build -x test

      - name: Docker build & push to Docker repo
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          echo "docker 로그인 성공"
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/nolmung .
          echo "docker 빌드 성공"
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/nolmung

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.AWS_EC2_SECRET_ACCESS_KEY }}
          port: 22
          script: |
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            echo "docker 로그인 성공"
            sudo docker stop $(sudo docker ps -aq)
            echo "현재 실행 중인 모든 Docker 컨테이너 중지"
            sudo docker rm -f $(sudo docker ps -qa)
            echo "기존 Docker Compose 컨테이너 강제로 삭제"
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/nolmung
            echo "docker pull 성공"
            
            sudo docker-compose -f docker-compose.yml up -d
            echo "Docker Compose로 컨테이너 시작 완료"

#            sudo docker run -d -p 443:8080 ${{ secrets.DOCKERHUB_USERNAME }}/nolmung
            sudo docker image prune -f
            echo "사용하지 않는 Docker image 정리"

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
